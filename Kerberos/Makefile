# GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild prelink

ifeq ($(config),debug)
  ifeq ($(origin CC), default)
    CC = gcc
  endif
  ifeq ($(origin CXX), default)
    CXX = g++
  endif
  ifeq ($(origin AR), default)
    AR = ar
  endif
  RESCOMP = windres
  TARGETDIR = ../bin/Debug-windows-x86_64/Kerberos
  TARGET = $(TARGETDIR)/Kerberos.lib
  OBJDIR = ../bin-int/Debug-windows-x86_64/Kerberos
  PCH = src/kbrpch.h
  GCH = $(OBJDIR)/$(notdir $(PCH)).gch
  DEFINES += -DKBR_PLATFORM_WINDOWS -DGLFW_INCLUDE_NONE -D_WINDLL -DIMGUI_DOCKING_BRANCH -DKBR_DEBUG
  INCLUDES += -Isrc -Ivendor -Ivendor/GLFW/include -Ivendor/glad/include -Ivendor/imgui -Ivendor/glm -IC:/VulkanSDK/1.3.296.0/Include -I"C:/Program Files (x86)/Windows Kits/10/Include/10.0.22621.0/um"
  FORCE_INCLUDE += -include $(OBJDIR)/$(notdir $(PCH))
  ALL_CPPFLAGS += $(CPPFLAGS) -MD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -g
  ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -g -std=c++20
  ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  LIBS += vendor/GLFW/bin/Debug-windows-x86_64/GLFW/GLFW.lib vendor/glad/bin/Debug-windows-x86_64/Glad/Glad.lib vendor/imgui/bin/Debug-windows-x86_64/ImGui/ImGui.lib -lopengl32.lib -ld3d11.lib -ldxgi.lib -ld3dcompiler.lib
  LDDEPS += vendor/GLFW/bin/Debug-windows-x86_64/GLFW/GLFW.lib vendor/glad/bin/Debug-windows-x86_64/Glad/Glad.lib vendor/imgui/bin/Debug-windows-x86_64/ImGui/ImGui.lib
  ALL_LDFLAGS += $(LDFLAGS) -L"C:/Program Files (x86)/Windows Kits/10/Lib/10.0.22621.0/um/x64" -L/usr/lib64 -m64
  LINKCMD = $(AR) -rcs "$@" $(OBJECTS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
all: prebuild prelink $(TARGET)
	@:

endif

ifeq ($(config),release)
  ifeq ($(origin CC), default)
    CC = gcc
  endif
  ifeq ($(origin CXX), default)
    CXX = g++
  endif
  ifeq ($(origin AR), default)
    AR = ar
  endif
  RESCOMP = windres
  TARGETDIR = ../bin/Release-windows-x86_64/Kerberos
  TARGET = $(TARGETDIR)/Kerberos.lib
  OBJDIR = ../bin-int/Release-windows-x86_64/Kerberos
  PCH = src/kbrpch.h
  GCH = $(OBJDIR)/$(notdir $(PCH)).gch
  DEFINES += -DKBR_PLATFORM_WINDOWS -DGLFW_INCLUDE_NONE -D_WINDLL -DIMGUI_DOCKING_BRANCH -DKB_RELEASE
  INCLUDES += -Isrc -Ivendor -Ivendor/GLFW/include -Ivendor/glad/include -Ivendor/imgui -Ivendor/glm -IC:/VulkanSDK/1.3.296.0/Include -I"C:/Program Files (x86)/Windows Kits/10/Include/10.0.22621.0/um"
  FORCE_INCLUDE += -include $(OBJDIR)/$(notdir $(PCH))
  ALL_CPPFLAGS += $(CPPFLAGS) -MD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2
  ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -std=c++20
  ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  LIBS += vendor/GLFW/bin/Release-windows-x86_64/GLFW/GLFW.lib vendor/glad/bin/Release-windows-x86_64/Glad/Glad.lib vendor/imgui/bin/Release-windows-x86_64/ImGui/ImGui.lib -lopengl32.lib -ld3d11.lib -ldxgi.lib -ld3dcompiler.lib
  LDDEPS += vendor/GLFW/bin/Release-windows-x86_64/GLFW/GLFW.lib vendor/glad/bin/Release-windows-x86_64/Glad/Glad.lib vendor/imgui/bin/Release-windows-x86_64/ImGui/ImGui.lib
  ALL_LDFLAGS += $(LDFLAGS) -L"C:/Program Files (x86)/Windows Kits/10/Lib/10.0.22621.0/um/x64" -L/usr/lib64 -m64 -s
  LINKCMD = $(AR) -rcs "$@" $(OBJECTS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
all: prebuild prelink $(TARGET)
	@:

endif

ifeq ($(config),dist)
  ifeq ($(origin CC), default)
    CC = gcc
  endif
  ifeq ($(origin CXX), default)
    CXX = g++
  endif
  ifeq ($(origin AR), default)
    AR = ar
  endif
  RESCOMP = windres
  TARGETDIR = ../bin/Dist-windows-x86_64/Kerberos
  TARGET = $(TARGETDIR)/Kerberos.lib
  OBJDIR = ../bin-int/Dist-windows-x86_64/Kerberos
  PCH = src/kbrpch.h
  GCH = $(OBJDIR)/$(notdir $(PCH)).gch
  DEFINES += -DKBR_PLATFORM_WINDOWS -DGLFW_INCLUDE_NONE -D_WINDLL -DIMGUI_DOCKING_BRANCH -DKB_DIST
  INCLUDES += -Isrc -Ivendor -Ivendor/GLFW/include -Ivendor/glad/include -Ivendor/imgui -Ivendor/glm -IC:/VulkanSDK/1.3.296.0/Include -I"C:/Program Files (x86)/Windows Kits/10/Include/10.0.22621.0/um"
  FORCE_INCLUDE += -include $(OBJDIR)/$(notdir $(PCH))
  ALL_CPPFLAGS += $(CPPFLAGS) -MD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2
  ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -std=c++20
  ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  LIBS += vendor/GLFW/bin/Dist-windows-x86_64/GLFW/GLFW.lib vendor/glad/bin/Dist-windows-x86_64/Glad/Glad.lib vendor/imgui/bin/Dist-windows-x86_64/ImGui/ImGui.lib -lopengl32.lib -ld3d11.lib -ldxgi.lib -ld3dcompiler.lib
  LDDEPS += vendor/GLFW/bin/Dist-windows-x86_64/GLFW/GLFW.lib vendor/glad/bin/Dist-windows-x86_64/Glad/Glad.lib vendor/imgui/bin/Dist-windows-x86_64/ImGui/ImGui.lib
  ALL_LDFLAGS += $(LDFLAGS) -L"C:/Program Files (x86)/Windows Kits/10/Lib/10.0.22621.0/um/x64" -L/usr/lib64 -m64 -s
  LINKCMD = $(AR) -rcs "$@" $(OBJECTS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
all: prebuild prelink $(TARGET)
	@:

endif

OBJECTS := \
	$(OBJDIR)/Application.o \
	$(OBJDIR)/ImGuiBuild.o \
	$(OBJDIR)/ImGuiLayer.o \
	$(OBJDIR)/Layer.o \
	$(OBJDIR)/LayerStack.o \
	$(OBJDIR)/Log.o \
	$(OBJDIR)/Buffer.o \
	$(OBJDIR)/OrthographicCamera.o \
	$(OBJDIR)/RenderCommand.o \
	$(OBJDIR)/Renderer.o \
	$(OBJDIR)/RendererAPI.o \
	$(OBJDIR)/Shader.o \
	$(OBJDIR)/VertexArray.o \
	$(OBJDIR)/D3D11Context.o \
	$(OBJDIR)/DirectX11Context.o \
	$(OBJDIR)/OpenGLBuffer.o \
	$(OBJDIR)/OpenGLContext.o \
	$(OBJDIR)/OpenGLRendererAPI.o \
	$(OBJDIR)/OpenGLShader.o \
	$(OBJDIR)/OpenGLVertexArray.o \
	$(OBJDIR)/WindowsInput.o \
	$(OBJDIR)/WindowsWindow.o \
	$(OBJDIR)/kbrpch.o \

RESOURCES := \

CUSTOMFILES := \

SHELLTYPE := posix
ifeq (.exe,$(findstring .exe,$(ComSpec)))
	SHELLTYPE := msdos
endif

$(TARGET): $(GCH) ${CUSTOMFILES} $(OBJECTS) $(LDDEPS) $(RESOURCES) | $(TARGETDIR)
	@echo Linking Kerberos
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(CUSTOMFILES): | $(OBJDIR)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning Kerberos
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild:
	$(PREBUILDCMDS)

prelink: $(OBJECTS)
	$(PRELINKCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) $(PCH) | $(OBJDIR)
$(GCH): $(PCH) | $(OBJDIR)
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
else
$(OBJECTS): | $(OBJDIR)
endif

$(OBJDIR)/Application.o: src/Kerberos/Application.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ImGuiBuild.o: src/Kerberos/ImGui/ImGuiBuild.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ImGuiLayer.o: src/Kerberos/ImGui/ImGuiLayer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Layer.o: src/Kerberos/Layer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/LayerStack.o: src/Kerberos/LayerStack.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Log.o: src/Kerberos/Log.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Buffer.o: src/Kerberos/Renderer/Buffer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/OrthographicCamera.o: src/Kerberos/Renderer/OrthographicCamera.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/RenderCommand.o: src/Kerberos/Renderer/RenderCommand.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Renderer.o: src/Kerberos/Renderer/Renderer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/RendererAPI.o: src/Kerberos/Renderer/RendererAPI.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Shader.o: src/Kerberos/Renderer/Shader.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/VertexArray.o: src/Kerberos/Renderer/VertexArray.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/D3D11Context.o: src/Platform/D3D11/D3D11Context.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/DirectX11Context.o: src/Platform/DirectX11/DirectX11Context.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/OpenGLBuffer.o: src/Platform/OpenGL/OpenGLBuffer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/OpenGLContext.o: src/Platform/OpenGL/OpenGLContext.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/OpenGLRendererAPI.o: src/Platform/OpenGL/OpenGLRendererAPI.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/OpenGLShader.o: src/Platform/OpenGL/OpenGLShader.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/OpenGLVertexArray.o: src/Platform/OpenGL/OpenGLVertexArray.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/WindowsInput.o: src/Platform/Windows/WindowsInput.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/WindowsWindow.o: src/Platform/Windows/WindowsWindow.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/kbrpch.o: src/kbrpch.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(OBJDIR)/$(notdir $(PCH)).d
endif